# Example  .gitlab-ci.yml file
stages:
  - mavenbuild
  - maventest
  - mavenDeploy
  # - androidtry
  - androidbuild
  - androidtest

maven-build:   #this is a JOB
  stage: mavenbuild
  tags:
    - backend_tag                      # this is LINK to the shell runner on the remote-server
  script:
    - cd Backend/SpringBackend                 #change directory to where you have your springboot application
    - mvn package

maven-test:
  stage: maventest
  tags:
    - backend_tag
  script:
    - cd Backend/SpringBackend
    - mvn test
  artifacts:
    paths:
      - Backend/target/*.jar

android-build:
  image: gjandres/android-ci:latest
  stage: androidbuild
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - chmod +x ./Frontend/gradlew
  tags:
   - android_tag
  script:
    - cd Frontend
    - ./gradlew build
  artifacts:
    paths:
    - Android_test/app/build/outputs/


android-test:
  image: gjandres/android-ci:latest
  stage: androidtest
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - chmod +x ./Frontend/gradlew
  tags:
   - tma_tag
  script:
    - cd Frontend
    - ./gradlew test

maven-deploy:
  stage: mavenDeploy
  tags:
    - bdpope_tag
  script:
    - cd Backend/SpringBackend
    - mvn package
    - sudo mv target/*.jar /target/web-demo.jar
    - sudo systemctl stop system-web-demo
    - sudo systemctl start system-web-demo


#android-build: #this is another job
#  image:  gjandres/android-ci:latest              # this is a directive to DOCKER
#  stage: androidtry
#  tags:
#    - android_tag                             #this is LINK to the docker runner on the remote-server
#  before_script:
#    - export GRADLE_USER_HOME=`pwd`/.gradle
#    - chmod +x ./Frontend/gradlew            #change directory to where you have ‘gradlew’ in your android directory
#  script:
#    - cd Frontend                    #change directory to where you have your android application
#    - ./gradlew assemble
